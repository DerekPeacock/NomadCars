@model NomadCars.Models.Car

<div class="form-group">
    <label class="control-label col-md-2" for="CarSpecID">BMW Model</label>
    <div class="col-md-10">
        @Html.DropDownList("CarSpecID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CarSpecID, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Colour, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Colour, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Colour, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.NumberPlate, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.NumberPlate, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NumberPlate, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.VINNo, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.VINNo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.VINNo, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Mileage, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Mileage, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Mileage, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.TransmissionType, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EnumDropDownListFor(model => model.TransmissionType, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.TransmissionType, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.NoPreviousOwner, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.NoPreviousOwner, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NoPreviousOwner, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.AccelerationTo60, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.AccelerationTo60, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.AccelerationTo60, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CO2Emissions, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CO2Emissions, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CO2Emissions, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Sold, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.Sold)
            @Html.ValidationMessageFor(model => model.Sold, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Delivered, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.Delivered)
            @Html.ValidationMessageFor(model => model.Delivered, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

